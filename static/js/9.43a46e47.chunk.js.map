{"version":3,"sources":["contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","views/Lottery/components/Hero.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","hooks/useTickets.ts","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/ClaimPrizesCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","components/Select/Select.tsx"],"names":["React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","a","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","getTickets","lotteryContract","ticketsContract","account","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","toString","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","BigNumber","eq","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","send","from","on","tx","transactionHash","console","error","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","BIG_ZERO","getLotteryIssueIndex","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","Title","styled","Heading","attrs","as","scale","ComeBack","Text","StyledHero","div","theme","mediaQueries","sm","StyledContainer","Container","LeftWrapper","lg","RightWrapper","Hero","t","useTranslation","bold","mt","external","href","src","alt","getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error","useGetRecentLotteryRoundData","useState","isLoading","setIsLoading","setData","setError","useContext","PastLotteryDataContext","useEffect","roundData","fetchRecentLotteryData","Wrapper","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","value","type","inputMode","min","isWarning","max","onChange","currentTarget","disabled","PastRoundCardError","message","IconWrapper","LotteryCardHeading","valueToDisplay","children","Icon","props","flexDirection","fontSize","color","defaultProps","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useWeb3React","useLotteryTicket","useLottery","useLastUpdated","lastUpdated","setLastUpdated","fetchBalance","useCallback","useTickets","setTickets","useRefresh","fastRefresh","RewardP","TicketsList","colors","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","setWinningNumbers","useWinningNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","onClick","ExternalLinkWrap","LinkExternal","TicketCard","contractLink","ticketsLength","useModal","onPresentMyTickets","width","UnlockButton","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","amount","multipliedBy","toNumber","toLocaleString","CardBusdValue","formatLotteryDate","lotteryDate","date","Date","dateString","toDateString","hours","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","CardHeading","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","mb","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","StyledLoading","Loading","StyledCardBody","CardBody","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","Bar","InnerWrapper","HistoryChart","showLast","isDark","useTheme","getDataArray","kind","rawData","dataPoint","reverse","Number","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","useMemo","tooltips","mode","intersect","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","LabelWrapper","PastDrawsHistoryCard","setShowLast","textTransform","Select","option","WinningsWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","onSuccess","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","handleClaim","winnings","getBalanceNumber","style","marginRight","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledHeading","UnlockWalletCard","ClaimPrizesCard","handleSuccess","Cards","BaseLayout","SecondCardColumnWrapper","BunnyImageWrapper","PastDrawsPage","Lottery","setHistoryData","setHistoryError","currentLotteryNumber","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Provider","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","ref","useRef","current","CardValue","decimals","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","height","containerSize","setContainerSize","toggling","onOptionClicked","offsetWidth","offsetHeight"],"mappings":"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","file":"static/js/9.43a46e47.chunk.js","sourcesContent":["import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/layout/Container'\n\nconst Title = styled(Heading).attrs({ as: 'h1', scale: 'xl' })`\n  color: #ffffff;\n  margin-bottom: 24px;\n  text-shadow: 2px 2px 2px #00000040;\n`\n\nconst ComeBack = styled(Text)`\n  background: -webkit-linear-gradient(#ffd800, #eb8c00);\n  font-size: 24px;\n  font-weight: 600;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(#7645d9, #452a7a);\n  max-height: max-content;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: 256px;\n  }\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n\n  & img {\n    width: 80%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n    & img {\n      margin-top: -25px;\n    }\n  }\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{t('The Lottery Is Changing!')}</Title>\n          <ComeBack>{t('Come back soon!')}</ComeBack>\n          <LinkExternal\n            bold\n            mt={20}\n            external\n            href=\"https://voting.pancakeswap.finance/#/pancake/proposal/QmU8pcbmBrfbfVQXMMxmkExDq3mYq4s5cbBuFe6uCZzdmX\"\n          >\n            {t('Learn more')}\n          </LinkExternal>\n        </LeftWrapper>\n        <RightWrapper>\n          <img src=\"/images/tombola.png\" alt=\"lottery bunny\" />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const { t } = useTranslation()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{t('Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              inputMode=\"numeric\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {t('Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading scale=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const { t } = useTranslation()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={t('My Tickets (Total: %TICKETS%)', { TICKETS: myTicketNumbers.length })} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {t('Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const { t } = useTranslation()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n        {t('View your tickets')}\n      </Button>\n      <ExternalLinkWrap href={contractLink}>{t('View on BscScan')}</ExternalLinkWrap>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const { t } = useTranslation()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {t('Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {t('Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading scale=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading scale=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading scale=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{t(`${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const { t } = useTranslation()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading scale=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {t('Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading valueToDisplay={t(`${poolSize.toLocaleString()} CAKE`)} Icon={PancakeRoundIcon}>\n              {t('Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const { t } = useTranslation()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: t('The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: t('Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\nconst Bar = lazy(() => import('./BarChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\ninterface HistoryChartProps {\n  showLast: 'max' | number\n}\n\nconst HistoryChart: React.FC<HistoryChartProps> = ({ showLast }) => {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    const rawData = historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n\n    return showLast === 'max' ? rawData : rawData.slice(Number(showLast) * -1)\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 12,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = useMemo(() => {\n    return {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      legend: { display: false },\n      scales: {\n        yAxes: [\n          {\n            type: 'linear',\n            position: 'left',\n            id: 'y-axis-pool',\n            ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n          },\n          {\n            type: 'linear',\n            position: 'right',\n            id: 'y-axis-burned',\n            ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n          },\n        ],\n        xAxes: [\n          {\n            ...axesStyles({ color: isDark ? '#FFFFFF' : '#452A7A', lineHeight: 1 }),\n          },\n        ],\n      },\n    }\n  }, [isDark])\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>{t('Error fetching data')}</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>{t('Loading...')}</div>}>\n          {showLast === 50 || showLast === 100 ? (\n            <Bar data={chartData} options={options} />\n          ) : (\n            <Line data={chartData} options={options} type=\"line\" />\n          )}\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 24px 0 24px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{t('Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{t('Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React, { useState } from 'react'\nimport { Heading, Card, CardBody, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-wrap: nowrap;\n    flex-direction: row;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n  }\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const { t } = useTranslation()\n  const [showLast, setShowLast] = useState<'max' | number>(50)\n  const handleShowLastChange = (option: OptionProps): void => {\n    setShowLast(option.value)\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading scale=\"md\">{t('History')}</Heading>\n        <Wrapper>\n          <Legend />\n          <LabelWrapper>\n            <Text textTransform=\"uppercase\">{t('Show Last')}</Text>\n            <Select\n              options={[\n                {\n                  label: '50',\n                  value: 50,\n                },\n                {\n                  label: '100',\n                  value: 100,\n                },\n                {\n                  label: '200',\n                  value: 200,\n                },\n                {\n                  label: 'Max',\n                  value: 'max',\n                },\n              ]}\n              onChange={handleShowLastChange}\n            />\n          </LabelWrapper>\n        </Wrapper>\n        <HistoryChart showLast={showLast} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\ninterface PrizesWonContentProps {\n  onSuccess: () => void\n}\n\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        onSuccess()\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" scale=\"lg\" color=\"secondary\">\n        {t('You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" scale=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" scale=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {t('Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {t('View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const { t } = useTranslation()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{t('Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {t('View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\ninterface YourPrizesCardProps {\n  isAWin: boolean\n  onSuccess: () => void\n}\n\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({ isAWin, onSuccess }) => {\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent onSuccess={onSuccess} /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  max-height: 196px;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <div>\n          <StyledHeading scale=\"md\">{t('Unlock wallet to access lottery')}</StyledHeading>\n          <UnlockButton />\n        </div>\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React, { useCallback } from 'react'\nimport { Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport YourPrizesCard from './YourPrizesCard'\nimport UnlockWalletCard from './UnlockWalletCard'\n\nconst ClaimPrizesCard = () => {\n  const { account } = useWeb3React()\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  const handleSuccess = useCallback(() => {\n    setLastUpdated()\n  }, [setLastUpdated])\n\n  return (\n    <Box mb=\"32px\">\n      {!account ? <UnlockWalletCard /> : <YourPrizesCard isAWin={isAWin} onSuccess={handleSuccess} />}\n    </Box>\n  )\n}\n\nexport default ClaimPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport ClaimPrizesCard from './components/ClaimPrizesCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <>\n      <ClaimPrizesCard />\n      <Cards>\n        <PastLotteryRoundViewer />\n        <SecondCardColumnWrapper>\n          <PastDrawsHistoryCard />\n          <BunnyImageWrapper>\n            <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n          </BunnyImageWrapper>\n        </SecondCardColumnWrapper>\n      </Cards>\n    </>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          <PastDrawsPage />\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}